/*
 * Copyright (c) 2007-2015 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.concurrentinc.com/
 */

import java.text.SimpleDateFormat

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.1'
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'provided-base'


archivesBaseName = 'recommender'

ext.cascadingVersion = "3.0.0"
ext.hadoopVersion = '2.6.0'

repositories {
  mavenLocal()
  mavenCentral()
  maven{ url 'http://conjars.org/repo/' }
}

dependencies {
  compile( group: 'cascading', name: 'cascading-core', version: cascadingVersion )
  compile( group: 'cascading', name: 'cascading-hadoop2-mr1', version: cascadingVersion )

  provided( group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoopVersion )
  provided( group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoopVersion )
}

jar {
  description = "Assembles a Hadoop ready jar file"
  doFirst {
    into( 'lib' ) {
      from configurations.runtime.minus( configurations.provided )
    }
  }

  manifest {
    attributes( "Main-Class": "sample/recommender/Main" )
  }
}

task distCopy( type: Copy, dependsOn: jar ) {
  into "${buildDir}/dist/${archivesBaseName}"

  from 'README.md'
  from 'build.gradle'
  from( 'src' ) {into 'src'}
  from( 'data' ) {into 'data'}

  from "$buildDir/libs"
}

task dist( type: Tar, dependsOn: distCopy ) {
  compression = "GZIP"
  classifier = new SimpleDateFormat( "yyyyMMdd" ).format( new Date() )

  from "${buildDir}/dist/"
}
